{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/calendar/create": {
            "post": {
                "description": "Create new event by form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Create event",
                "operationId": "create",
                "parameters": [
                    {
                        "description": "Event to create",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created event: 1345",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            }
        },
        "/calendar/event/{id}": {
            "put": {
                "description": "Updated existing event by form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Update event",
                "operationId": "update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event to update",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete existing event by form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Delete event",
                "operationId": "delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            }
        },
        "/calendar/list/day": {
            "post": {
                "description": "Get all events per day by datetime form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Get all events per day",
                "operationId": "list-per-day",
                "parameters": [
                    {
                        "description": "Get events per day",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internalhttp.DatetimeForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            }
        },
        "/calendar/list/month": {
            "post": {
                "description": "Get all events per month by datetime form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Get all events per month",
                "operationId": "list-per-month",
                "parameters": [
                    {
                        "description": "Get events per month",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internalhttp.DatetimeForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            }
        },
        "/calendar/list/week": {
            "post": {
                "description": "Get all events per week by datetime form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "calendar"
                ],
                "summary": "Get all events per week",
                "operationId": "list-per-week",
                "parameters": [
                    {
                        "description": "Get events per week",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internalhttp.DatetimeForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad request message",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.BadRequestForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/internalhttp.ServerErrorForm"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internalhttp.BadRequestForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad Request message"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "internalhttp.DatetimeForm": {
            "type": "object",
            "properties": {
                "datetime": {
                    "type": "string",
                    "example": "2024-05-10T10:07:35Z"
                }
            }
        },
        "internalhttp.ResponseForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Done"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "internalhttp.ServerErrorForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Server Error message"
                },
                "status": {
                    "type": "integer",
                    "example": 503
                }
            }
        },
        "storage.Event": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Alarm to wake up"
                },
                "id": {
                    "type": "integer"
                },
                "notification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "example": 10
                },
                "start": {
                    "type": "string",
                    "example": "2024-05-10T10:07:35Z"
                },
                "stop": {
                    "type": "string",
                    "example": "2024-05-11T10:07:35Z"
                },
                "title": {
                    "type": "string",
                    "example": "Alarm"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second"
            ]
        }
    }
}